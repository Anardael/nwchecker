<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
    <global-method-security pre-post-annotations="enabled" />
    <http use-expressions="true">
        <access-denied-handler error-page="/accessDenied.do" />
        <intercept-url pattern="/getTasks**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/profile**" access="isAuthenticated()" />
        <intercept-url pattern="/changePassword**" access="isAuthenticated()" />
        <intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/getUsers**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/userEdit**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/changeUser**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/deleteUser**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/userRequests**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/getUsersWithRequests**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/acceptUserRequests**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/listContests**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/getListOfContests**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/getContestStatus**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/setContestStatus**" access="hasRole('ROLE_ADMIN')" />
        <form-login login-page="/login.do" authentication-failure-url="/login.do?error" />
        <logout logout-url="/logout.do" />
    </http>

	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder hash="bcrypt"></password-encoder>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="userDetailsService" class="com.nwchecker.server.service.UserDetailsServiceImpl">
	</beans:bean>

    <!--<beans:bean id="authenticationFilter"
                class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter" >
        <beans:property name="postOnly" value="false" />
    </beans:bean>-->

</beans:beans>
